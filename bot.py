import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters
import discord
from discord.ext import tasks

# –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ —ñ ID –∑ –æ—Ç–æ—á–µ–Ω–Ω—è
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
DISCORD_CHANNEL_ID = int(os.getenv("DISCORD_CHANNEL_ID"))
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHANNEL_ID = int(os.getenv("TELEGRAM_CHANNEL_ID"))

intents = discord.Intents.default()
intents.message_content = True
discord_client = discord.Client(intents=intents)

discord_messages_queue = asyncio.Queue()

@discord_client.event
async def on_ready():
    print(f"Discord –±–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —è–∫ {discord_client.user}")
    if not discord_sender.is_running():
        discord_sender.start()

@tasks.loop(seconds=5)
async def discord_sender():
    channel = discord_client.get_channel(DISCORD_CHANNEL_ID)
    if channel is None:
        print("Discord –∫–∞–Ω–∞–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return

    while not discord_messages_queue.empty():
        content = await discord_messages_queue.get()
        try:
            await channel.send(content)
            print("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É Discord")
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ —É Discord: {e}")

async def handle_telegram_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.effective_message

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª—É/—á–∞—Ç—É
    if TELEGRAM_CHANNEL_ID and update.effective_chat.id != TELEGRAM_CHANNEL_ID:
        return

    content = ""

    if message.text:
        content += f"üìù –¢–µ–∫—Å—Ç –∑ Telegram:\n{message.text}\n"

    if message.photo:
        photo = message.photo[-1]
        file = await photo.get_file()
        file_url = file.file_path
        content += f"üñº –§–æ—Ç–æ: {file_url}\n"

    if message.document:
        file = await message.document.get_file()
        file_url = file.file_path
        content += f"üìé –î–æ–∫—É–º–µ–Ω—Ç: {file_url}\n"

    if message.video:
        file = await message.video.get_file()
        file_url = file.file_path
        content += f"üé• –í—ñ–¥–µ–æ: {file_url}\n"

    if content:
        await discord_messages_queue.put(content)
        print("–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ Telegram, –¥–æ–¥–∞–Ω–æ –¥–æ —á–µ—Ä–≥–∏ Discord")

async def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram –±–æ—Ç–∞
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.ALL, handle_telegram_message))

    await app.initialize()
    await app.start()
    polling_task = asyncio.create_task(app.updater.start_polling())

    # –õ–æ–≥—ñ–Ω —ñ –∫–æ–Ω–Ω–µ–∫—Ç Discord –±–æ—Ç–∞
    await discord_client.login(DISCORD_TOKEN)
    discord_task = asyncio.create_task(discord_client.connect())

    # –ß–µ–∫–∞—î–º–æ –æ–¥–Ω–æ—á–∞—Å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –æ–±–æ—Ö —Ç–∞—Å–∫—ñ–≤ (–±—É–¥—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤—ñ—á–Ω–æ)
    await asyncio.gather(polling_task, discord_task)

if __name__ == "__main__":
    asyncio.run(main())
